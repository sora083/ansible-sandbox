#user nginx;
user www-data;

# CPUのコア数にあわせて設定してくれるのでautoで。
worker_processes auto;

error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# nginx worker の設定
# worker_rlimit_nofile  4096;  # worker_connections の 4 倍程度（感覚値）

events {
    worker_connections 1024; # 大きくするなら worker_rlimit_nofile も大きくする（file descriptor数の制限を緩める)
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # ログをltsv形式で出力するためのフォーマット定義
    log_format ltsv "time:$time_local"
            "\thost:$remote_addr"
            "\tforwardedfor:$http_x_forwarded_for"
            "\treq:$request"
            "\tmethod:$request_method"
            "\turi:$request_uri"
            "\tstatus:$status"
            "\tsize:$body_bytes_sent"
            "\treferer:$http_referer"
            "\tua:$http_user_agent"
            "\treqtime:$request_time"
            "\truntime:$upstream_http_x_runtime"
            "\tapptime:$upstream_response_time"
            "\tcache:$upstream_http_x_cache"
            "\tvhost:$host"
        ;
    # Linuxのsendfile()を使うようにする設定
    ## ファイルディスクリプタとの通信(コンテンツファイルの読み込みとかクライアントへのレスポンスとか)をカーネル空間内でやるようになる。
    ## tcp_nopushはsendfileで取り扱うパケットをまとめるようになるオプションなので合わせて有効にしておきます。
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;

    # KeepAliveの設定
    keepalive_timeout   65;

    # typesディレクティブのハッシュテーブルに割り当てるバケットの最大サイズを設定
    types_hash_max_size 2048;

    # 3台構成にする場合の例
    upstream isucon1 {
        server {{ host01 }}:8080 fail_timeout=0;
    }

    upstream isucon2 {
        server {{ host02 }}:8080 fail_timeout=0;
    }

    upstream isucon3 {
        server {{ host03 }}:8080 fail_timeout=0;
    }

    upstream app {
        server {{ host02 }}:8080 fail_timeout=0;
        server {{ host03 }}:8080 fail_timeout=0;
    }

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  torb.example.com;

        #root         /home/isucon/torb/webapp/static;

    	access_log  /var/log/nginx/access.log  ltsv;
        # 最終計測ではoffにする
        #access_log off;

        location / {
	        proxy_set_header Host $host;
	        proxy_pass http://app;
            #proxy_pass http://127.0.0.1:8080;
        }
    }
}
